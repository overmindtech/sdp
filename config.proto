syntax = "proto3";

package config;
option go_package = "github.com/overmindtech/sdp-go;sdp";

// a simple key-value store to store configuration data for accounts and users (TODO)
service ConfigurationService {
    // Get the account config for the user's account
    rpc GetAccountConfig(GetAccountConfigRequest) returns (GetAccountConfigResponse);
    // Update the account config for the user's account
    rpc UpdateAccountConfig(UpdateAccountConfigRequest) returns (UpdateAccountConfigResponse);
}

// The config that is used when calculating the blast radius for a change, this
// does not affect manually requested blast radii vie the "Explore" view or the
// API
message BlastRadiusConfig {
    // The maximum number of items that can be returned in a single blast radius
    // request. Once a request has hit this limit, all currently running
    // requests will be cancelled and the blast radius returned as-is
    int32 maxItems = 1;

    // How deeply to link when calculating the blast radius for a change
    int32 linkDepth = 2;
}

message AccountConfig {
    enum BlastRadiusPreset {
        // Customise advanced limits.
        CUSTOM = 0;
        // Runs a shallow scan for dependencies. Reduces time takes to calculate
        // blast radius, but might mean some dependencies are missed
        QUICK = 1;
        // An optimised balance between time taken and discovery.
        DETAILED = 2;
        // Discovers all possible dependencies, might take a long time and
        // discover items that are less likely to be relevant to a change.
        FULL = 3;
    }

    // The preset that we should use when calculating the blast radius for a
    // change. If this is set to "CUSTOM" then the `blastRadius` config should be
    // set
    BlastRadiusPreset blastRadiusPreset = 2;

    // The blast radius config for this account, this is only required if the
    // preset is "CUSTOM"
    optional BlastRadiusConfig blastRadius = 1;
}

message GetAccountConfigRequest {}

message GetAccountConfigResponse {
    AccountConfig config = 1;
}

// Updates the account config for the user's account.
message UpdateAccountConfigRequest {
    AccountConfig config = 1;
}

message UpdateAccountConfigResponse {
    AccountConfig config = 1;
}
