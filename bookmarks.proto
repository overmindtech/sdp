syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "items.proto";

// _____/\\\\\\\\\\\____/\\\\\\\\\\\\_____/\\\\\\\\\\\\\___
//  ___/\\\/////////\\\_\/\\\////////\\\__\/\\\/////////\\\_
//   __\//\\\______\///__\/\\\______\//\\\_\/\\\_______\/\\\_
//    ___\////\\\_________\/\\\_______\/\\\_\/\\\\\\\\\\\\\/__
//     ______\////\\\______\/\\\_______\/\\\_\/\\\/////////____
//      _________\////\\\___\/\\\_______\/\\\_\/\\\_____________
//       __/\\\______\//\\\__\/\\\_______/\\\__\/\\\_____________
//        _\///\\\\\\\\\\\/___\/\\\\\\\\\\\\/___\/\\\_____________
//         ___\///////////_____\////////////_____\///______________
option go_package = "github.com/overmindtech/sdp-go;sdp";

service BookmarksService {
    rpc ListBookmarks(ListBookmarksRequest) returns (ListBookmarkResponse);
    rpc CreateBookmark(CreateBookmarkRequest) returns (CreateBookmarkResponse);
    rpc GetBookmark(GetBookmarkRequest) returns (GetBookmarkResponse);
    rpc UpdateBookmark(UpdateBookmarkRequest) returns (UpdateBookmarkResponse);
    rpc DeleteBookmark(DeleteBookmarkRequest) returns (DeleteBookmarkResponse);
}

///////////////////////////////////////////////////////////////////////////////
// bookmark handling
//
// the gateway can store, retrieve, list and delete bookmarks of queries
///////////////////////////////////////////////////////////////////////////////

// a complete Bookmark with user-supplied and machine-supplied values
message Bookmark {
    BookmarkMetadata metadata = 1;
    BookmarkProperties properties = 2;
}

// The user-editable parts of a Bookmark
message BookmarkProperties {
    // user supplied name of this bookmark
    string name = 1;
    // user supplied description of this bookmark
    string description = 2;
    // queries that make up the bookmark
    repeated Query queries = 3;
    // Items that should be excluded from the bookmark's results
    repeated Reference excludedItems = 4;
}

// Descriptor for a bookmark
message BookmarkMetadata {
    // unique id to identify this bookmark
    bytes UUID = 1;
    // timestamp when this bookmark was created
    google.protobuf.Timestamp created = 2;
}

////////////////////////////
// Requests and Responses //
////////////////////////////

// list all bookmarks
message ListBookmarksRequest {
    // TODO: pagination
}

message ListBookmarkResponse {
    repeated Bookmark bookmarks = 3;
}

// creates a new bookmark
message CreateBookmarkRequest {
    BookmarkProperties properties = 1;
}

message CreateBookmarkResponse {
    Bookmark bookmark = 1;
}

// gets a specific bookmark
message GetBookmarkRequest {
    bytes uuid = 1;
}

message GetBookmarkResponse {
    Bookmark bookmark = 1;
}

// updates an existing bookmark
message UpdateBookmarkRequest {
    // unique id to identify this bookmark
    bytes UUID = 1;
    // new attributes for this bookmark
    BookmarkProperties properties = 2;
}

message UpdateBookmarkResponse {
    Bookmark bookmark = 3;
}

// Delete the bookmark with the specified ID.
message DeleteBookmarkRequest {
    // unique id of the bookmark to delete
    bytes UUID = 1;
}

message DeleteBookmarkResponse {
}
