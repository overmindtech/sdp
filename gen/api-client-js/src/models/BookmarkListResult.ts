/* tslint:disable */
/* eslint-disable */
/**
 * bookmarks.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BookmarkDescriptor } from './BookmarkDescriptor';
import {
    BookmarkDescriptorFromJSON,
    BookmarkDescriptorFromJSONTyped,
    BookmarkDescriptorToJSON,
} from './BookmarkDescriptor';

/**
 * 
 * @export
 * @interface BookmarkListResult
 */
export interface BookmarkListResult {
    /**
     * 
     * @type {boolean}
     * @memberof BookmarkListResult
     */
    success?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BookmarkListResult
     */
    errorMessage?: string;
    /**
     * 
     * @type {Array<BookmarkDescriptor>}
     * @memberof BookmarkListResult
     */
    bookmarks?: Array<BookmarkDescriptor>;
}

/**
 * Check if a given object implements the BookmarkListResult interface.
 */
export function instanceOfBookmarkListResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BookmarkListResultFromJSON(json: any): BookmarkListResult {
    return BookmarkListResultFromJSONTyped(json, false);
}

export function BookmarkListResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookmarkListResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'bookmarks': !exists(json, 'bookmarks') ? undefined : ((json['bookmarks'] as Array<any>).map(BookmarkDescriptorFromJSON)),
    };
}

export function BookmarkListResultToJSON(value?: BookmarkListResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'errorMessage': value.errorMessage,
        'bookmarks': value.bookmarks === undefined ? undefined : ((value.bookmarks as Array<any>).map(BookmarkDescriptorToJSON)),
    };
}

